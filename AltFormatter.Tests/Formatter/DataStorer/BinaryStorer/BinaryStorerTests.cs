/*
 * AltFormatter.
 * Licensed under MIT License.
 * Copyright © 2017 Pavel Chaimardanov.
 */
using AltFormatter.Utils;

namespace AltFormatter.Formatter
{
	internal sealed partial class BinaryStorerTests
	{
		private const string filePath1 = "File.txt";
		
		private const string filePath2 = "File/File.txt";
		
		private static readonly byte[] fileData = ("With tenure, Suzie’d have all the more leisure for yachting, but her publications are no good.").GetBytes();
		
		private static readonly byte[] binaryEmpty = new byte[0];
		
		private static readonly byte[] binaryOneFileStore = {0x60, 0x0, 0x0, 0x0, 0x8, 0x0, 0x0, 0x0, 0x0, 0x46, 0x69, 0x6C, 0x65, 0x2E, 0x74, 0x78, 0x74, 0x57, 0x69, 0x74, 0x68, 0x20, 0x74, 0x65, 0x6E, 0x75, 0x72, 0x65, 0x2C, 0x20, 0x53, 0x75, 0x7A, 0x69, 0x65, 0xE2, 0x80, 0x99, 0x64, 0x20, 0x68, 0x61, 0x76, 0x65, 0x20, 0x61, 0x6C, 0x6C, 0x20, 0x74, 0x68, 0x65, 0x20, 0x6D, 0x6F, 0x72, 0x65, 0x20, 0x6C, 0x65, 0x69, 0x73, 0x75, 0x72, 0x65, 0x20, 0x66, 0x6F, 0x72, 0x20, 0x79, 0x61, 0x63, 0x68, 0x74, 0x69, 0x6E, 0x67, 0x2C, 0x20, 0x62, 0x75, 0x74, 0x20, 0x68, 0x65, 0x72, 0x20, 0x70, 0x75, 0x62, 0x6C, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6F, 0x6E, 0x73, 0x20, 0x61, 0x72, 0x65, 0x20, 0x6E, 0x6F, 0x20, 0x67, 0x6F, 0x6F, 0x64, 0x2E};
		
		private static readonly byte[] binaryOneFileDeflate = {0x56, 0x0, 0x0, 0x0, 0x8, 0x0, 0x0, 0x0, 0x8, 0x46, 0x69, 0x6C, 0x65, 0x2E, 0x74, 0x78, 0x74, 0xD, 0xCA, 0xB1, 0xD, 0x80, 0x30, 0xC, 0x4, 0xC0, 0x55, 0x7E, 0x0, 0xC4, 0x32, 0x14, 0xD4, 0x86, 0x18, 0x6C, 0x29, 0xC4, 0x28, 0xD8, 0x48, 0x50, 0xB1, 0x6, 0xEB, 0x31, 0x9, 0xB9, 0xFA, 0x46, 0x75, 0x81, 0x73, 0x89, 0xCA, 0x1D, 0x86, 0xB8, 0x95, 0xBF, 0xE7, 0x4D, 0x10, 0x3A, 0x19, 0x94, 0x33, 0x5C, 0x18, 0x9B, 0x55, 0x46, 0x66, 0x3D, 0x5A, 0xC2, 0x62, 0x15, 0x17, 0xCD, 0xE2, 0x5A, 0xD6, 0xE, 0x53, 0x38, 0x84, 0x2B, 0xF6, 0x98, 0xB2, 0xCE, 0xE4, 0x6A, 0xE5, 0x0, 0xB5, 0x56, 0xC, 0xAB, 0x59, 0xEA, 0x7F};
		
		private static readonly byte[] binaryTwoFilesStore = {0x60, 0x0, 0x0, 0x0, 0x8, 0x0, 0x0, 0x0, 0x0, 0x46, 0x69, 0x6C, 0x65, 0x2E, 0x74, 0x78, 0x74, 0x57, 0x69, 0x74, 0x68, 0x20, 0x74, 0x65, 0x6E, 0x75, 0x72, 0x65, 0x2C, 0x20, 0x53, 0x75, 0x7A, 0x69, 0x65, 0xE2, 0x80, 0x99, 0x64, 0x20, 0x68, 0x61, 0x76, 0x65, 0x20, 0x61, 0x6C, 0x6C, 0x20, 0x74, 0x68, 0x65, 0x20, 0x6D, 0x6F, 0x72, 0x65, 0x20, 0x6C, 0x65, 0x69, 0x73, 0x75, 0x72, 0x65, 0x20, 0x66, 0x6F, 0x72, 0x20, 0x79, 0x61, 0x63, 0x68, 0x74, 0x69, 0x6E, 0x67, 0x2C, 0x20, 0x62, 0x75, 0x74, 0x20, 0x68, 0x65, 0x72, 0x20, 0x70, 0x75, 0x62, 0x6C, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6F, 0x6E, 0x73, 0x20, 0x61, 0x72, 0x65, 0x20, 0x6E, 0x6F, 0x20, 0x67, 0x6F, 0x6F, 0x64, 0x2E, 0x60, 0x0, 0x0, 0x0, 0xD, 0x0, 0x0, 0x0, 0x0, 0x46, 0x69, 0x6C, 0x65, 0x2F, 0x46, 0x69, 0x6C, 0x65, 0x2E, 0x74, 0x78, 0x74, 0x57, 0x69, 0x74, 0x68, 0x20, 0x74, 0x65, 0x6E, 0x75, 0x72, 0x65, 0x2C, 0x20, 0x53, 0x75, 0x7A, 0x69, 0x65, 0xE2, 0x80, 0x99, 0x64, 0x20, 0x68, 0x61, 0x76, 0x65, 0x20, 0x61, 0x6C, 0x6C, 0x20, 0x74, 0x68, 0x65, 0x20, 0x6D, 0x6F, 0x72, 0x65, 0x20, 0x6C, 0x65, 0x69, 0x73, 0x75, 0x72, 0x65, 0x20, 0x66, 0x6F, 0x72, 0x20, 0x79, 0x61, 0x63, 0x68, 0x74, 0x69, 0x6E, 0x67, 0x2C, 0x20, 0x62, 0x75, 0x74, 0x20, 0x68, 0x65, 0x72, 0x20, 0x70, 0x75, 0x62, 0x6C, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6F, 0x6E, 0x73, 0x20, 0x61, 0x72, 0x65, 0x20, 0x6E, 0x6F, 0x20, 0x67, 0x6F, 0x6F, 0x64, 0x2E};
		
		private static readonly byte[] binaryTwoFilesDeflate = {0x56, 0x0, 0x0, 0x0, 0x8, 0x0, 0x0, 0x0, 0x8, 0x46, 0x69, 0x6C, 0x65, 0x2E, 0x74, 0x78, 0x74, 0xD, 0xCA, 0xB1, 0xD, 0x80, 0x30, 0xC, 0x4, 0xC0, 0x55, 0x7E, 0x0, 0xC4, 0x32, 0x14, 0xD4, 0x86, 0x18, 0x6C, 0x29, 0xC4, 0x28, 0xD8, 0x48, 0x50, 0xB1, 0x6, 0xEB, 0x31, 0x9, 0xB9, 0xFA, 0x46, 0x75, 0x81, 0x73, 0x89, 0xCA, 0x1D, 0x86, 0xB8, 0x95, 0xBF, 0xE7, 0x4D, 0x10, 0x3A, 0x19, 0x94, 0x33, 0x5C, 0x18, 0x9B, 0x55, 0x46, 0x66, 0x3D, 0x5A, 0xC2, 0x62, 0x15, 0x17, 0xCD, 0xE2, 0x5A, 0xD6, 0xE, 0x53, 0x38, 0x84, 0x2B, 0xF6, 0x98, 0xB2, 0xCE, 0xE4, 0x6A, 0xE5, 0x0, 0xB5, 0x56, 0xC, 0xAB, 0x59, 0xEA, 0x7F, 0x56, 0x0, 0x0, 0x0, 0xD, 0x0, 0x0, 0x0, 0x8, 0x46, 0x69, 0x6C, 0x65, 0x2F, 0x46, 0x69, 0x6C, 0x65, 0x2E, 0x74, 0x78, 0x74, 0xD, 0xCA, 0xB1, 0xD, 0x80, 0x30, 0xC, 0x4, 0xC0, 0x55, 0x7E, 0x0, 0xC4, 0x32, 0x14, 0xD4, 0x86, 0x18, 0x6C, 0x29, 0xC4, 0x28, 0xD8, 0x48, 0x50, 0xB1, 0x6, 0xEB, 0x31, 0x9, 0xB9, 0xFA, 0x46, 0x75, 0x81, 0x73, 0x89, 0xCA, 0x1D, 0x86, 0xB8, 0x95, 0xBF, 0xE7, 0x4D, 0x10, 0x3A, 0x19, 0x94, 0x33, 0x5C, 0x18, 0x9B, 0x55, 0x46, 0x66, 0x3D, 0x5A, 0xC2, 0x62, 0x15, 0x17, 0xCD, 0xE2, 0x5A, 0xD6, 0xE, 0x53, 0x38, 0x84, 0x2B, 0xF6, 0x98, 0xB2, 0xCE, 0xE4, 0x6A, 0xE5, 0x0, 0xB5, 0x56, 0xC, 0xAB, 0x59, 0xEA, 0x7F};
		
		private sealed class InvalidBinaryEntry : IDataStorerEntry
		{
			public string Path { get; set; }
		}
	}
}